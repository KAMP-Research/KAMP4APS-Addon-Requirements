/**
 */
package apshardwareoptions.provider;

import apshardwareoptions.util.ApshardwareoptionsAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class ApshardwareoptionsItemProviderAdapterFactory extends ApshardwareoptionsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ApshardwareoptionsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqHardwareOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqHardwareOptionItemProvider apsReqHardwareOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqHardwareOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqHardwareOptionAdapter() {
		if (apsReqHardwareOptionItemProvider == null) {
			apsReqHardwareOptionItemProvider = new APSReqHardwareOptionItemProvider(this);
		}

		return apsReqHardwareOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqStructureHardwareOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqStructureHardwareOptionItemProvider apsReqStructureHardwareOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqStructureHardwareOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqStructureHardwareOptionAdapter() {
		if (apsReqStructureHardwareOptionItemProvider == null) {
			apsReqStructureHardwareOptionItemProvider = new APSReqStructureHardwareOptionItemProvider(this);
		}

		return apsReqStructureHardwareOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqIntroduceNewStructureOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqIntroduceNewStructureOptionItemProvider apsReqIntroduceNewStructureOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqIntroduceNewStructureOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqIntroduceNewStructureOptionAdapter() {
		if (apsReqIntroduceNewStructureOptionItemProvider == null) {
			apsReqIntroduceNewStructureOptionItemProvider = new APSReqIntroduceNewStructureOptionItemProvider(this);
		}

		return apsReqIntroduceNewStructureOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqChangeStructureOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqChangeStructureOptionItemProvider apsReqChangeStructureOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqChangeStructureOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqChangeStructureOptionAdapter() {
		if (apsReqChangeStructureOptionItemProvider == null) {
			apsReqChangeStructureOptionItemProvider = new APSReqChangeStructureOptionItemProvider(this);
		}

		return apsReqChangeStructureOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqRemoveStructureOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqRemoveStructureOptionItemProvider apsReqRemoveStructureOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqRemoveStructureOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqRemoveStructureOptionAdapter() {
		if (apsReqRemoveStructureOptionItemProvider == null) {
			apsReqRemoveStructureOptionItemProvider = new APSReqRemoveStructureOptionItemProvider(this);
		}

		return apsReqRemoveStructureOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqReplaceStructureOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqReplaceStructureOptionItemProvider apsReqReplaceStructureOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqReplaceStructureOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqReplaceStructureOptionAdapter() {
		if (apsReqReplaceStructureOptionItemProvider == null) {
			apsReqReplaceStructureOptionItemProvider = new APSReqReplaceStructureOptionItemProvider(this);
		}

		return apsReqReplaceStructureOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqModuleHardwareOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqModuleHardwareOptionItemProvider apsReqModuleHardwareOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqModuleHardwareOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModuleHardwareOptionAdapter() {
		if (apsReqModuleHardwareOptionItemProvider == null) {
			apsReqModuleHardwareOptionItemProvider = new APSReqModuleHardwareOptionItemProvider(this);
		}

		return apsReqModuleHardwareOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqIntroduceNewModuleOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqIntroduceNewModuleOptionItemProvider apsReqIntroduceNewModuleOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqIntroduceNewModuleOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqIntroduceNewModuleOptionAdapter() {
		if (apsReqIntroduceNewModuleOptionItemProvider == null) {
			apsReqIntroduceNewModuleOptionItemProvider = new APSReqIntroduceNewModuleOptionItemProvider(this);
		}

		return apsReqIntroduceNewModuleOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqRemoveModuleOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqRemoveModuleOptionItemProvider apsReqRemoveModuleOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqRemoveModuleOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqRemoveModuleOptionAdapter() {
		if (apsReqRemoveModuleOptionItemProvider == null) {
			apsReqRemoveModuleOptionItemProvider = new APSReqRemoveModuleOptionItemProvider(this);
		}

		return apsReqRemoveModuleOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqChangeModuleOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqChangeModuleOptionItemProvider apsReqChangeModuleOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqChangeModuleOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqChangeModuleOptionAdapter() {
		if (apsReqChangeModuleOptionItemProvider == null) {
			apsReqChangeModuleOptionItemProvider = new APSReqChangeModuleOptionItemProvider(this);
		}

		return apsReqChangeModuleOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqReplaceModuleOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqReplaceModuleOptionItemProvider apsReqReplaceModuleOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqReplaceModuleOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqReplaceModuleOptionAdapter() {
		if (apsReqReplaceModuleOptionItemProvider == null) {
			apsReqReplaceModuleOptionItemProvider = new APSReqReplaceModuleOptionItemProvider(this);
		}

		return apsReqReplaceModuleOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqComponentHardwareOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqComponentHardwareOptionItemProvider apsReqComponentHardwareOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqComponentHardwareOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqComponentHardwareOptionAdapter() {
		if (apsReqComponentHardwareOptionItemProvider == null) {
			apsReqComponentHardwareOptionItemProvider = new APSReqComponentHardwareOptionItemProvider(this);
		}

		return apsReqComponentHardwareOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqIntroduceNewComponentOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqIntroduceNewComponentOptionItemProvider apsReqIntroduceNewComponentOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqIntroduceNewComponentOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqIntroduceNewComponentOptionAdapter() {
		if (apsReqIntroduceNewComponentOptionItemProvider == null) {
			apsReqIntroduceNewComponentOptionItemProvider = new APSReqIntroduceNewComponentOptionItemProvider(this);
		}

		return apsReqIntroduceNewComponentOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqRemoveComponentOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqRemoveComponentOptionItemProvider apsReqRemoveComponentOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqRemoveComponentOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqRemoveComponentOptionAdapter() {
		if (apsReqRemoveComponentOptionItemProvider == null) {
			apsReqRemoveComponentOptionItemProvider = new APSReqRemoveComponentOptionItemProvider(this);
		}

		return apsReqRemoveComponentOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqReplaceComponentOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqReplaceComponentOptionItemProvider apsReqReplaceComponentOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqReplaceComponentOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqReplaceComponentOptionAdapter() {
		if (apsReqReplaceComponentOptionItemProvider == null) {
			apsReqReplaceComponentOptionItemProvider = new APSReqReplaceComponentOptionItemProvider(this);
		}

		return apsReqReplaceComponentOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqInterfaceHardwareOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqInterfaceHardwareOptionItemProvider apsReqInterfaceHardwareOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqInterfaceHardwareOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqInterfaceHardwareOptionAdapter() {
		if (apsReqInterfaceHardwareOptionItemProvider == null) {
			apsReqInterfaceHardwareOptionItemProvider = new APSReqInterfaceHardwareOptionItemProvider(this);
		}

		return apsReqInterfaceHardwareOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqIntroduceNewInterfaceOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqIntroduceNewInterfaceOptionItemProvider apsReqIntroduceNewInterfaceOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqIntroduceNewInterfaceOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqIntroduceNewInterfaceOptionAdapter() {
		if (apsReqIntroduceNewInterfaceOptionItemProvider == null) {
			apsReqIntroduceNewInterfaceOptionItemProvider = new APSReqIntroduceNewInterfaceOptionItemProvider(this);
		}

		return apsReqIntroduceNewInterfaceOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqChangeInterfaceOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqChangeInterfaceOptionItemProvider apsReqChangeInterfaceOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqChangeInterfaceOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqChangeInterfaceOptionAdapter() {
		if (apsReqChangeInterfaceOptionItemProvider == null) {
			apsReqChangeInterfaceOptionItemProvider = new APSReqChangeInterfaceOptionItemProvider(this);
		}

		return apsReqChangeInterfaceOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqReplaceInterfaceOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqReplaceInterfaceOptionItemProvider apsReqReplaceInterfaceOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqReplaceInterfaceOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqReplaceInterfaceOptionAdapter() {
		if (apsReqReplaceInterfaceOptionItemProvider == null) {
			apsReqReplaceInterfaceOptionItemProvider = new APSReqReplaceInterfaceOptionItemProvider(this);
		}

		return apsReqReplaceInterfaceOptionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link apshardwareoptions.APSReqRemoveInterfaceOption} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected APSReqRemoveInterfaceOptionItemProvider apsReqRemoveInterfaceOptionItemProvider;

	/**
	 * This creates an adapter for a {@link apshardwareoptions.APSReqRemoveInterfaceOption}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAPSReqRemoveInterfaceOptionAdapter() {
		if (apsReqRemoveInterfaceOptionItemProvider == null) {
			apsReqRemoveInterfaceOptionItemProvider = new APSReqRemoveInterfaceOptionItemProvider(this);
		}

		return apsReqRemoveInterfaceOptionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (apsReqHardwareOptionItemProvider != null) apsReqHardwareOptionItemProvider.dispose();
		if (apsReqStructureHardwareOptionItemProvider != null) apsReqStructureHardwareOptionItemProvider.dispose();
		if (apsReqIntroduceNewStructureOptionItemProvider != null) apsReqIntroduceNewStructureOptionItemProvider.dispose();
		if (apsReqChangeStructureOptionItemProvider != null) apsReqChangeStructureOptionItemProvider.dispose();
		if (apsReqRemoveStructureOptionItemProvider != null) apsReqRemoveStructureOptionItemProvider.dispose();
		if (apsReqReplaceStructureOptionItemProvider != null) apsReqReplaceStructureOptionItemProvider.dispose();
		if (apsReqModuleHardwareOptionItemProvider != null) apsReqModuleHardwareOptionItemProvider.dispose();
		if (apsReqIntroduceNewModuleOptionItemProvider != null) apsReqIntroduceNewModuleOptionItemProvider.dispose();
		if (apsReqRemoveModuleOptionItemProvider != null) apsReqRemoveModuleOptionItemProvider.dispose();
		if (apsReqChangeModuleOptionItemProvider != null) apsReqChangeModuleOptionItemProvider.dispose();
		if (apsReqReplaceModuleOptionItemProvider != null) apsReqReplaceModuleOptionItemProvider.dispose();
		if (apsReqComponentHardwareOptionItemProvider != null) apsReqComponentHardwareOptionItemProvider.dispose();
		if (apsReqIntroduceNewComponentOptionItemProvider != null) apsReqIntroduceNewComponentOptionItemProvider.dispose();
		if (apsReqRemoveComponentOptionItemProvider != null) apsReqRemoveComponentOptionItemProvider.dispose();
		if (apsReqReplaceComponentOptionItemProvider != null) apsReqReplaceComponentOptionItemProvider.dispose();
		if (apsReqInterfaceHardwareOptionItemProvider != null) apsReqInterfaceHardwareOptionItemProvider.dispose();
		if (apsReqIntroduceNewInterfaceOptionItemProvider != null) apsReqIntroduceNewInterfaceOptionItemProvider.dispose();
		if (apsReqChangeInterfaceOptionItemProvider != null) apsReqChangeInterfaceOptionItemProvider.dispose();
		if (apsReqReplaceInterfaceOptionItemProvider != null) apsReqReplaceInterfaceOptionItemProvider.dispose();
		if (apsReqRemoveInterfaceOptionItemProvider != null) apsReqRemoveInterfaceOptionItemProvider.dispose();
	}

}
