/**
 */
package edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.provider;

import de.uka.ipd.sdq.dsexplore.qml.dimensiontypes.DimensionTypeScale;
import de.uka.ipd.sdq.dsexplore.qml.dimensiontypes.DimensiontypesPackage;
import de.uka.ipd.sdq.dsexplore.qml.dimensiontypes.util.DimensiontypesSwitch;
import edu.kit.ipd.sdq.kamp.model.modificationmarks.AbstractChangePropagationStep;
import edu.kit.ipd.sdq.kamp.model.modificationmarks.AbstractModificationRepository;
import edu.kit.ipd.sdq.kamp.model.modificationmarks.AbstractSeedModifications;
import edu.kit.ipd.sdq.kamp.model.modificationmarks.ModificationmarksPackage;
import edu.kit.ipd.sdq.kamp.model.modificationmarks.util.ModificationmarksSwitch;
import edu.kit.ipd.sdq.kamp4aps.model.modificationmarks.ChangePropagationDueToHardwareChange;
import edu.kit.ipd.sdq.kamp4aps.model.modificationmarks.modificationmarksPackage;
import edu.kit.ipd.sdq.kamp4aps.model.modificationmarks.util.modificationmarksSwitch;
import edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModificationmarksFactory;
import edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModificationmarksPackage;
import edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.util.APSReqModificationmarksAdapterFactory;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.common.util.ResourceLocator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.edit.command.CommandParameter;
import org.eclipse.emf.edit.domain.EditingDomain;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support
 * Viewers. The adapters generated by this factory convert EMF adapter
 * notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The
 * adapters also support Eclipse property sheets. Note that most of the adapters
 * are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 * 
 * @generated
 */
public class APSReqModificationmarksItemProviderAdapterFactory extends APSReqModificationmarksAdapterFactory
		implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this
	 * adapter factory. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement
	 * {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders. <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(
			APSReqModificationmarksEditPlugin.INSTANCE, APSReqModificationmarksPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by
	 * {@link #isFactoryForType isFactoryForType}. <!-- begin-user-doc --> <!--
	 * end-user-doc -->
	 * 
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc
	 * -->
	 * 
	 * @generated
	 */
	public APSReqModificationmarksItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModificationRepository}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModificationRepositoryItemProvider apsReqModificationRepositoryItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModificationRepository}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModificationRepositoryAdapter() {
		if (apsReqModificationRepositoryItemProvider == null) {
			apsReqModificationRepositoryItemProvider = new APSReqModificationRepositoryItemProvider(this);
		}

		return apsReqModificationRepositoryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqSeedModifications}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqSeedModificationsItemProvider apsReqSeedModificationsItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqSeedModifications}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqSeedModificationsAdapter() {
		if (apsReqSeedModificationsItemProvider == null) {
			apsReqSeedModificationsItemProvider = new APSReqSeedModificationsItemProvider(this);
		}

		return apsReqSeedModificationsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqChangePropagationDueToSpecificationDependencies}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqChangePropagationDueToSpecificationDependenciesItemProvider apsReqChangePropagationDueToSpecificationDependenciesItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqChangePropagationDueToSpecificationDependencies}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqChangePropagationDueToSpecificationDependenciesAdapter() {
		if (apsReqChangePropagationDueToSpecificationDependenciesItemProvider == null) {
			apsReqChangePropagationDueToSpecificationDependenciesItemProvider = new APSReqChangePropagationDueToSpecificationDependenciesItemProvider(
					this);
		}

		return apsReqChangePropagationDueToSpecificationDependenciesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyComponent}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyComponentItemProvider apsReqModifyComponentItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyComponent}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyComponentAdapter() {
		if (apsReqModifyComponentItemProvider == null) {
			apsReqModifyComponentItemProvider = new APSReqModifyComponentItemProvider(this);
		}

		return apsReqModifyComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyModule}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyModuleItemProvider apsReqModifyModuleItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyModule}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyModuleAdapter() {
		if (apsReqModifyModuleItemProvider == null) {
			apsReqModifyModuleItemProvider = new APSReqModifyModuleItemProvider(this);
		}

		return apsReqModifyModuleItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyStructure}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyStructureItemProvider apsReqModifyStructureItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyStructure}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyStructureAdapter() {
		if (apsReqModifyStructureItemProvider == null) {
			apsReqModifyStructureItemProvider = new APSReqModifyStructureItemProvider(this);
		}

		return apsReqModifyStructureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyInterface}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyInterfaceItemProvider apsReqModifyInterfaceItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyInterface}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyInterfaceAdapter() {
		if (apsReqModifyInterfaceItemProvider == null) {
			apsReqModifyInterfaceItemProvider = new APSReqModifyInterfaceItemProvider(this);
		}

		return apsReqModifyInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyRequirement}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyRequirementItemProvider apsReqModifyRequirementItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyRequirement}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyRequirementAdapter() {
		if (apsReqModifyRequirementItemProvider == null) {
			apsReqModifyRequirementItemProvider = new APSReqModifyRequirementItemProvider(this);
		}

		return apsReqModifyRequirementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyDecision}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyDecisionItemProvider apsReqModifyDecisionItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyDecision}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyDecisionAdapter() {
		if (apsReqModifyDecisionItemProvider == null) {
			apsReqModifyDecisionItemProvider = new APSReqModifyDecisionItemProvider(this);
		}

		return apsReqModifyDecisionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyOption}
	 * instances. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	protected APSReqModifyOptionItemProvider apsReqModifyOptionItemProvider;

	/**
	 * This creates an adapter for a
	 * {@link edu.kit.ipd.sdq.kamp4aps4req.model.modificationmarks.APSReqModifyOption}.
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter createAPSReqModifyOptionAdapter() {
		if (apsReqModifyOptionItemProvider == null) {
			apsReqModifyOptionItemProvider = new APSReqModifyOptionItemProvider(this);
		}

		return apsReqModifyOptionItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the
	 * adapter. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to
	 * {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!-- end-user-doc
	 * -->
	 * 
	 * @generated
	 */
	@Override
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	@Override
	public void dispose() {
		if (apsReqModificationRepositoryItemProvider != null)
			apsReqModificationRepositoryItemProvider.dispose();
		if (apsReqSeedModificationsItemProvider != null)
			apsReqSeedModificationsItemProvider.dispose();
		if (apsReqChangePropagationDueToSpecificationDependenciesItemProvider != null)
			apsReqChangePropagationDueToSpecificationDependenciesItemProvider.dispose();
		if (apsReqModifyComponentItemProvider != null)
			apsReqModifyComponentItemProvider.dispose();
		if (apsReqModifyModuleItemProvider != null)
			apsReqModifyModuleItemProvider.dispose();
		if (apsReqModifyStructureItemProvider != null)
			apsReqModifyStructureItemProvider.dispose();
		if (apsReqModifyInterfaceItemProvider != null)
			apsReqModifyInterfaceItemProvider.dispose();
		if (apsReqModifyRequirementItemProvider != null)
			apsReqModifyRequirementItemProvider.dispose();
		if (apsReqModifyDecisionItemProvider != null)
			apsReqModifyDecisionItemProvider.dispose();
		if (apsReqModifyOptionItemProvider != null)
			apsReqModifyOptionItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link DimensiontypesPackage}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public static class DimensiontypesChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended
		 * class. <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		protected static class CreationSwitch extends DimensiontypesSwitch<Object> {
			/**
			 * The child descriptors being populated. <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children. <!-- begin-user-doc
			 * --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the
			 * given domain. <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			@Override
			public <T extends Number> Object caseDimensionTypeScale(DimensionTypeScale<T> object) {
				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModificationRepository()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqSeedModifications()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE
										.createAPSReqChangePropagationDueToSpecificationDependencies()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyComponent()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyModule()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyStructure()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyInterface()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyRequirement()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyDecision()));

				newChildDescriptors
						.add(createChildParameter(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
								APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyOption()));

				return null;
			}

			/**
			 * <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		@Override
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		@Override
		public ResourceLocator getResourceLocator() {
			return APSReqModificationmarksEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link modificationmarksPackage}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public static class modificationmarks1ChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended
		 * class. <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		protected static class CreationSwitch extends modificationmarksSwitch<Object> {
			/**
			 * The child descriptors being populated. <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children. <!-- begin-user-doc
			 * --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the
			 * given domain. <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			@Override
			public Object caseChangePropagationDueToHardwareChange(ChangePropagationDueToHardwareChange object) {
				newChildDescriptors.add(createChildParameter(
						modificationmarksPackage.Literals.CHANGE_PROPAGATION_DUE_TO_HARDWARE_CHANGE__INTERFACE_MODIFICATIONS,
						APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyInterface()));

				newChildDescriptors.add(createChildParameter(
						modificationmarksPackage.Literals.CHANGE_PROPAGATION_DUE_TO_HARDWARE_CHANGE__COMPONENT_MODIFICATIONS,
						APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyComponent()));

				newChildDescriptors.add(createChildParameter(
						modificationmarksPackage.Literals.CHANGE_PROPAGATION_DUE_TO_HARDWARE_CHANGE__STRUCTURE_MODIFICATIONS,
						APSReqModificationmarksFactory.eINSTANCE.createAPSReqModifyStructure()));

				return null;
			}

			/**
			 * <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		@Override
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		@Override
		public ResourceLocator getResourceLocator() {
			return APSReqModificationmarksEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link ModificationmarksPackage}. <!--
	 * begin-user-doc --> <!-- end-user-doc -->
	 * 
	 * @generated
	 */
	public static class ModificationmarksChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended
		 * class. <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		protected static class CreationSwitch extends ModificationmarksSwitch<Object> {
			/**
			 * The child descriptors being populated. <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children. <!-- begin-user-doc
			 * --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the
			 * given domain. <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}

			/**
			 * <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			@Override
			public <S extends AbstractSeedModifications, T extends AbstractChangePropagationStep> Object caseAbstractModificationRepository(
					AbstractModificationRepository<S, T> object) {
				newChildDescriptors.add(createChildParameter(
						ModificationmarksPackage.Literals.ABSTRACT_MODIFICATION_REPOSITORY__SEED_MODIFICATIONS,
						APSReqModificationmarksFactory.eINSTANCE.createAPSReqSeedModifications()));

				newChildDescriptors.add(createChildParameter(
						ModificationmarksPackage.Literals.ABSTRACT_MODIFICATION_REPOSITORY__CHANGE_PROPAGATION_STEPS,
						APSReqModificationmarksFactory.eINSTANCE
								.createAPSReqChangePropagationDueToSpecificationDependencies()));

				return null;
			}

			/**
			 * <!-- begin-user-doc --> <!-- end-user-doc -->
			 * 
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		@Override
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject) object);
			return result;
		}

		/**
		 * <!-- begin-user-doc --> <!-- end-user-doc -->
		 * 
		 * @generated
		 */
		@Override
		public ResourceLocator getResourceLocator() {
			return APSReqModificationmarksEditPlugin.INSTANCE;
		}
	}

}
